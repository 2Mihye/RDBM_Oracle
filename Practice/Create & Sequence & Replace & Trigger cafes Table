CREATE TABLE cafes (
cafe_id INT PRIMARY KEY,
cname VARCHAR2(255) NOT NULL,
caddress VARCHAR2(255),
phone_number VARCHAR2(15),
operating_hours VARCHAR2(255));

CREATE SEQUENCE cafe_seq
    START WITH 1
    INCREMENT BY 1
    NOCACHE -- 추가적으로 넣고 필수는 아님
    NOCYCLE;
    
CREATE OR REPLACE TRIGGER cafe_trigger
BEFORE INSERT ON cafes
FOR EACH ROW
BEGIN
    SELECT cafe_seq.NEXTVAL
    INTO:NEW.cafe_id
    FROM dual;
END;
/

-- 카페 삽입
  INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('카페 서울', '서울시 강남구 역삼로 123', '02-555-1234', '월-금: 07:00-21:00, 주말: 08:00-20:00');

-- 2
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('종로 그 집', '서울시 종로구 인사동 45', '02-777-4567', '매일: 09:00-22:00');

-- 3
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('in 바다', '부산시 해운대구 해운대로 67', '051-888-7890', '월-금: 08:30-20:30, 주말: 09:00-19:00');

-- 4
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('대구 중앙', '대구시 중구 중앙대로 34', '053-222-5678', '매일: 07:30-19:30');

-- 5
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('인천행', '인천시 남동구 도화동 56', '032-333-6789', '월-금: 08:00-20:00, 주말: 09:00-18:00');

-- 6
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('광주 토박이', '광주시 서구 상무대로 78', '062-444-5678', '월-금: 07:00-22:00, 주말: 08:00-21:00');

-- 7
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('아이스 대전', '대전시 중구 대흥로 56', '042-555-7890', '매일: 09:00-20:30');

-- 8
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('오늘도 화남구', '울산시 남구 번영로 34', '052-666-3456', '월-금: 08:30-19:30, 주말: 09:00-18:00');

-- 9
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('라떼는 강서에서', '서울시 강서구 공항로 56', '02-777-2345', '매일: 07:00-21:30');

-- 10
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('부산시렵네', '부산시 서구 부전로 45', '051-888-4567', '월-금: 08:00-20:30, 주말: 09:00-19:00');

-- 11
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('캡푸치노', '대구시 수성구 수성로 67', '053-333-5678', '매일: 09:30-20:00');

-- 12
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('인키아또', '인천시 남구 구월로 78', '032-444-7890', '월-금: 08:00-22:00, 주말: 09:00-21:00');

-- 13
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('광주는 라떼 천국', '광주시 동구 서석로 56', '062-555-2345', '매일: 07:00-20:30');

-- 14
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('인 월드 계백', '대전시 서구 계백로 45', '042-888-4567', '월-금: 08:00-21:00, 주말: 09:00-20:00');

-- 15
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('hi round', '울산시 중구 신정로 34', '052-333-5678', '매일: 09:00-19:30');

-- 16
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('song pa seoul', '서울시 송파구 올림픽로 56', '02-444-7890', '월-금: 08:00-20:00, 주말: 09:00-18:00');

-- 17
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('동포카토', '부산시 동구 중앙대로 67', '051-555-2345', '매일: 07:00-22:00');

-- 18
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('휴양지 대구시', '대구시 남구 대명로 78', '053-666-4567', '월-금: 08:30-19:30, 주말: 09:00-18:00');

-- 19
INSERT INTO cafes (cname, caddress, phone_number, operating_hours)
VALUES ('바나쁘레소', '서울시 역삼시티동', '02-666-6666', '월-금: 08:30-19:30, 주말: 09:00-18:00');


CREATE TABLE menu (
    menu_id INT PRIMARY KEY,
    cafe_id INT,
    mname VARCHAR2(255) NOT NULL,
    price NUMBER(8, 2) NOT NULL,
    CONSTRAINT fk_cafe -- 제약 조건 (강제적으로 사용할 때)
        FOREIGN KEY (cafe_id) -- 한 테이블의 열이 다른 테이블의 열을 참조할 때
        REFERENCES cafes(cafe_id)
);

-- 메뉴 삽입
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (1, 1, '에스프레소', 3.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (2, 2, '카페모카', 5.55);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (3, 3, '그린티라떼', 4.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (4, 4, '아메리카노', 3.35);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (5, 5, '카페라떼', 4.75);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (6, 7, '바닐라라떼', 5.20);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (7, 16, '에스프레소', 3.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (8, 8, '딸기주스', 4.75);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (9, 9, '키위주스', 4.45);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (10, 10, '사과주스', 5.30);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (11, 11, '수박주스', 7.25);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (12, 12, '코코넛주스', 6.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (13, 13, '포도주스', 3.99);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (14, 14, '토마토주스', 3.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (15, 15, '아포카토', 6.99);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (16, 7, '얼그레이바닐라라떼', 7.50);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (17, 17, '토피넛라떼', 5.99);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (18, 18, '레몬아이스티', 2.99);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (19, 19, '복숭아이스티', 2.99);
INSERT INTO menu (menu_id, cafe_id, mname, price)
VALUES (20, 6, '캐모마일티', 3.99);

--Menu 테이블에 Description 열 추가
ALTER TABLE menu ADD description VARCHAR2(500);

--Menu 테이블에 Description 열 정보 업데이트
UPDATE menu SET description = '강렬한 에스프레소 커피 영국을 느낄 수 있음' WHERE menu_id = 1 AND cafe_id = 1;
UPDATE menu SET description = '달달한 초콜릿 향의 따뜻한 카페모카' WHERE menu_id = 2 AND cafe_id = 2;
UPDATE menu SET description = '향긋한 제주 녹차로 만든 그린티라떼' WHERE menu_id = 3 AND cafe_id = 3;
UPDATE menu SET description = '모두를 사로잡은 마성의 음료 아메리카노' WHERE menu_id = 4 AND cafe_id = 4;
UPDATE menu SET description = '씁쓸한 커피 향을 부드럽게 감싸주는 우유의 맛 카페라떼' WHERE menu_id = 5 AND cafe_id = 5;
UPDATE menu SET description = '씁쓸한 커피, 부드러운 우유, 달콤한 바닐라 시럽의 콜라보' WHERE menu_id = 6 AND cafe_id = 7;
UPDATE menu SET description = '인생의 쓴맛 이탈리아의 그 맛' WHERE menu_id = 7 AND cafe_id = 16;
UPDATE menu SET description = '논산 딸기를 직접 갈아 만든 딸기주스' WHERE menu_id = 8 AND cafe_id = 8;
UPDATE menu SET description = '제스프리 골드키위로 갈아만든 골드키워 주스' WHERE menu_id = 9 AND cafe_id = 9;
UPDATE menu SET description = '청송 제철 사과로 갈아만든 사과 주스' WHERE menu_id = 10 AND cafe_id = 10;
UPDATE menu SET description = '당도 최상의 수박을 씨 빼고 갈아만든 수박주스' WHERE menu_id = 11 AND cafe_id = 11;
UPDATE menu SET description = '필리핀에서 수입해서 직접 갈아만든 코코넛주스' WHERE menu_id = 12 AND cafe_id = 12;
UPDATE menu SET description = '당도 최고의 포도만 씨빼고 갈아만든 포도주스' WHERE menu_id = 13 AND cafe_id = 13;
UPDATE menu SET description = '토마토만 갈면 맛이 없어요. 설탕 추가해서 갈아만든 꿀맛 토마토주스' WHERE menu_id = 14 AND cafe_id = 14;
UPDATE menu SET description = '상하목장 아이스크림과 씁쓸한 에스프레소의 잘못된 만남' WHERE menu_id = 15 AND cafe_id = 15;
UPDATE menu SET description = '한번 빠지면 헤어나올 수 없는 달달한 맛 얼그레이 바닐라 라떼' WHERE menu_id = 16 AND cafe_id = 7;
UPDATE menu SET description = '크리스마스가 다가오면 생각하는 달콤 씁쓸 고소한 토피넛 라떼' WHERE menu_id = 17 AND cafe_id = 17;
UPDATE menu SET description = '미국에서 여름 국민 음료 레몬아이스티' WHERE menu_id = 18 AND cafe_id = 18;
UPDATE menu SET description = '아메리카노와 섞어 먹으면 오묘하게 계속 마시게되는 복숭아 아이스티' WHERE menu_id = 19 AND cafe_id = 19;
UPDATE menu SET description = '잠 안 올때 따뜻하게 한 잔 캐모마일 티' WHERE menu_id = 20 AND cafe_id = 6;

--Menu 테이블에 메뉴 추가
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (21, 7, '아메리카노', 4.00, '매끈한 아메리카노 커피');
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (22, 9, '카페 라떼', 4.50, '부드러운 카페 라떼');
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (23, 11, '카푸치노', 4.50, '크림이 올라간 카푸치노');
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (24, 13, '아이스 커피', 3.75, '시원한 아이스 커피');
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (25, 15, '모카라떼', 5.00, '초콜릿 풍미의 모카라떼');
INSERT INTO menu (menu_id, cafe_id, mname, price, description)
VALUES (26, 17, '핫 초코렛', 4.25, '따뜻한 핫 초콜릿');


-- Orders 테이블 생성
CREATE TABLE orders(
order_id NUMBER PRIMARY KEY,
cafe_id NUMBER,
menu_id NUMBER,
order_date TIMESTAMP,
quantity NUMBER,
total_price NUMBER);

-- 테이블을 이미 생성 후 추가로 외래 키 제약 조건 삽입
ALTER TABLE orders ADD
    CONSTRAINT fk_orders_cafe -- 제약 조건 (강제적으로 사용할 때)
        FOREIGN KEY (cafe_id) -- 한 테이블의 열이 다른 테이블의 열을 참조할 때
        REFERENCES cafes(cafe_id);
ALTER TABLE orders ADD
    CONSTRAINT fk_orders_menu
        FOREIGN KEY (menu_id)
        REFERENCES menu(menu_id);

--테이블 코멘트 추가
COMMENT ON TABLE orders IS '주문 정보를 저장하는 테이블';

--열 코멘트 추가
COMMENT ON COLUMN orders.order_id IS '주문을 고유하게 식별하는 번호';
COMMENT ON COLUMN orders.cafe_id IS '주문이 발생한 카페 번호';
COMMENT ON COLUMN orders.menu_id IS '주문한 메뉴 항복의 번호';
COMMENT ON COLUMN orders.order_date IS '주문이 발생한 날짜와 시간';
COMMENT ON COLUMN orders.quantity IS '주문한 메뉴 항목의 수량';
COMMENT ON COLUMN orders.total_price IS '주문 총 금액';

-- 첫 주문을 주문 테이블에 추가
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price)
VALUES (1, 1, 1, TIMESTAMP '2023-10-11 14:30:00', 2, 7.00);

ALTER TABLE orders ADD oname VARCHAR2(255);
COMMENT ON COLUMN orders.oname IS '주문한 메뉴의 이름';
UPDATE orders SET oname = '에스프레소' WHERE order_id = 1;
UPDATE menu SET mname = '에스프레소' WHERE menu_id = 7;

-- 주문 2
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (2, 2, 2, TIMESTAMP '2023-10-11 14:30:00', 3, 16.65, '카페모카');
-- 주문 3
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (3, 3, 4, TIMESTAMP '2023-10-11 10:00:00', 1, 4.50, '아메리카노');
-- 주문 4
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (4, 5, 6, TIMESTAMP '2023-10-11 17:15:00', 2, 10.00, '바닐라라떼');
--주문 5
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (5, 8, 8, TIMESTAMP '2023-10-11 16:30:00', 3, 11.25, '딸기주스');
--  주문 6
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (6, 10, 10, TIMESTAMP '2023-10-11 15:45:00', 1, 4.25, '사과주스');
-- 주문 7
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (7, 11, 12, TIMESTAMP '2023-10-11 13:15:00', 2, 10.00, '코코넛주스');
-- 주문 8
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (8, 13, 14, TIMESTAMP '2023-10-11 11:00:00', 4, 18.00, '토마토주스');
-- 주문 9
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (9, 14, 16, TIMESTAMP '2023-10-11 18:30:00', 2, 9.00, '얼그레이바닐라라떼');
-- 주문 10
INSERT INTO orders (order_id, cafe_id, menu_id, order_date, quantity, total_price, oname)
VALUES (10, 16, 18, TIMESTAMP '2023-10-11 19:45:00', 1, 4.50, '레몬아이스티');

SELECT o.order_id, c.cname AS cafe_name, m.mname, m.price, o.quantity, o.total_price
FROM orders o
JOIN cafes c ON o.cafe_id = c.cafe_id
JOIN menu m ON o.menu_id = m.menu_id
WHERE o.order_id = 10;

UPDATE orders SET total_price = 2.99 WHERE order_id = 10;

-- 서울에 위치한 모든 카페 조회:
SELECT * FROM cafes WHERE caddress LIKE '%서울%';
-- 메뉴가 아메리카노가 있는 카페 찾기:
SELECT c.cname, m.mname FROM cafes c JOIN menu m ON c.cafe_id = m.cafe_id WHERE m.mname = '아메리카노';
-- 주말(토요일 or 일요일)에 운영되는 카페 목록
SELECT * FROM cafes WHERE operating_hours LIKE '%주말%';
-- 02를 포함하는 전화번호를 가지는 서울의 카페 찾기:
SELECT * FROM cafes WHERE phone_number LIKE '%02%';
-- 이름에 라떼가 포함된 카페 찾기
SELECT cname FROM cafes WHERE cname LIKE '%라떼%';
-- 4.00 미만의 가격을 가진 메뉴 항목 찾기
SELECT mname, price FROM menu GROUP BY mname, price HAVING price < 4.00;
-- 매일 운영되는 카페 찾기
SELECT cname, operating_hours FROM cafes WHERE operating_hours LIKE '%매일%';
-- 매일 운영되고 가격 4.00 미만의 가격을 가진 카페 찾기
SELECT c.cname, c.operating_hours, m.mname, m.price FROM cafes c JOIN menu m ON c.cafe_id = m.cafe_id WHERE c.operating_hours LIKE '%매일%' AND m.price < 4.00;
-- 대 라는 이름을 가진 카페 찾기
SELECT cname FROM cafes WHERE cname LIKE '%대%';
--모든 카페의 메뉴 항목 수 계산:
SELECT cafe_id, COUNT(menu_id) AS no_menu FROM menu GROUP BY cafe_id;
--메뉴 설명에 '아이스'가 포함된 카페 찾기:
SELECT c.cname, m.mname, m.description FROM cafes c JOIN menu m ON c.cafe_id = m.cafe_id WHERE m.description LIKE '%아이스%';
--각 카페별 모든 메뉴 항목의 총 가격 계산:
SELECT cafe_id, SUM(price) FROM menu GROUP BY cafe_id;
--'초콜릿'이 설명에 포함된 메뉴 항목이 있는 카페 선택:
SELECT c.cname, m.mname, m.description FROM cafes c JOIN menu m ON c.cafe_id = m.cafe_id WHERE m.description LIKE '%초콜릿%';


/*********************** QUiZ **************************/

-- 특정 카페의 주문 조회 (in 바다 카페 주문 조회)
SELECT o.order_id, c.cname AS cafe_name, m.mname, m.price, o.quantity, o.total_price
FROM orders o
JOIN cafes c ON o.cafe_id = c.cafe_id
JOIN menu m ON o.menu_id = m.menu_id
WHERE c.cname LIKE '%바다%';
--선생님 풀이: SELECT * FROM orders WHERE cafe_id = (SELECT cafe_id FROM cafes WHERE CNAME = 'IN 바다');

-- 특정 주문 날짜 범위 내 주문 조회
--선생님 풀이: SELECT * FROM orders WHERE order_date BETWEEN TO_DATE('2023-10-10','YYYY-MM-DD');

-- 각 카페별 주문 총액 조회
SELECT cafe_id, SUM(total_price) FROM orders GROUP BY cafe_id;
-- 선생님 풀이: SELECT c.cname, SUM(o.total_price) FROM cafes c JOIN orders o ON c.cafe_id = o.cafe_id GROUP BY c.cname;

-- 주문 수량이 3개 이상인 주문 조회
-- SELECT * FROM orders WHERE quantity >= 3;

--(3.00 ~ 5.00) 가격 범위 내의 메뉴 조회
-- SELECT * FROM menu WHERE price BETWEEN 3.00 ~ 5.00;

--주문일이 오늘인 주문 조회
-- SELECT * FROM orders WHERE TRUNC(order_date) = TRUNC(sysdate);


-- FETCH FIRST 5 ROWS ONLY 결과가 모여진 집합에서 첫번째 행부터 다섯번째 행까지만 변환
--FETCH 이후 진행할 것 // 가장 비싼 메뉴 조회
SELECT * FROM menu ORDER BY price DESC FETCH FIRST 1 ROW ONLY;
SELECT * FROM menu ORDER BY price DESC LIMIT 1;
