-- 제품 테이블 생성
CREATE TABLE products (
    product_id NUMBER(5) PRIMARY KEY,
    product_name VARCHAR2(100),
    category VARCHAR2(50),
    price NUMBER(10,2),
    stock_quantity NUMBER(5));
    
-- 인덱스 생성 : 제품 이름으로 검색을 최적화 // ASC : 오름차순
CREATE INDEX idx_product_name ON products(product_name);

-- 인덱스 생성 : 카테고리로 검색을 최적화
CREATE INDEX idx_category ON products(category);

-- 상품 추가
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (1, '노트북', '전자제품', 899.99, 10);
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (2, '스마트폰', '전자제품', 499.99, 20);
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (3, '커피머신', '가전제품', 59.99, 5);
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (4, '운동화', '신발', 79.99, 30);
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (5, '후드 집업', '의류', 20.99, 33);
INSERT INTO products(product_id, product_name, category, price, stock_quantity)
VALUES (6, '원 피 스', '의류', 10.99, 2); 

-- 제품 이름으로 검색(인덱스 활용)
SELECT * FROM products WHERE product_name = '노트북';
-- 주문 ID 주문 검색 (인덱스 활용하여 주문 검색)
SELECT * FROM orders WHERE order_id = 7;
-- cafe_id가 6인 카페에서 주문 검색
SELECT * FROM orders WHERE cafe_id = 6;
-- 가격이 10.00~15.00 가격 범위로 주문 검색
SELECT * FROM orders WHERE total_price BETWEEN 10.00 AND 15.00;
-- 2023-10-11 14:00:00 ~ 2023-10-11 15:00:00 범위로 주문 검색(인덱스 활용)
SELECT * FROM orders WHERE order_date BETWEEN TO_TIMESTAMP('2023-10-11 14:00:00') AND ('2023-10-11 15:00:00');

/*************** 함수 *****************/
-- 문자열에서 특정 문자 또는 문자열을 다른 문자열로 대체
SELECT REPLACE (description, '풍미', '맛') FROM menu;
SELECT product_name, REPLACE(product_name, '스마트', '똑똑한') FROM products;
-- 두 문자열을 결합 CONCAT
SELECT product_name || '가격 : $' || TO_CHAR(price, '999.99') FROM products;
--  문자열 일부 추출 SUBSTR(SUBSTRING)
SELECT product_name, SUBSTR(product_name, 1, 3) FROM products;
-- 문자열에서 공백 또는 내용 일부를 제거(TRIP, LTRIM, RTRIM)
-- TRIM : 문자열의 양쪽 끝에있는 ' '(=공백)을 제거 하는 데 사용
-- LTRIM : 문자열에서 시작 부분의 ' '(=공백)을 제거
-- RTRIM : 문자열에서 끝 부분의 ' '(=공백)을 제거

SELECT product_name, TRIM(' '), LTRIM(product_name, '노트'), RTRIM(product_name, '폰') FROM products;
-- 전자제품에서 전자를 제거하고 출력 SELECT LTRIM 활용
SELECT LTRIM(category, '전자') FROM products;
-- 전자제품에서 제품을 제거하고 출력 SELECT RTRIM 활용
SELECT RTRIM(category, '제품') FROM products;

-- INSTR : 문자열에서 특정 문자 위치
SELECT category, INSTR(category, '품') FROM products;

-- LENGTHB : 바이트 문자열 길이
-- LENGTH : 문자 단위로 문자열 길이
SELECT product_name, LENGTHB(product_name), LENGTH(product_name) FROM products;

-- 가장 긴 제품 이름 찾기
SELECT product_name FROM products WHERE LENGTH(product_name) = (SELECT MAX(LENGTH(product_name)) FROM products);
-- 제품 가격 반올림
SELECT product_name, ROUND(price) AS round_price FROM products;
-- 제품 이름에 폰이 들어가는 제품 찾기 INSTR 활용
SELECT product_name, INSTR(product_name, '폰') FROM products; -- 모든 제품 이름들에서 폰이라는 글자의 위치가 나옴
SELECT product_name, price FROM products WHERE INSTR(product_name, '폰') > 0; -- 폰이 들어간 제품의 이름과 가격
SELECT product_name, price FROM products WHERE product_name LIKE '%폰%';
